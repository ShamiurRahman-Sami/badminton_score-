# Generated by Django 2.2.8 on 2020-11-08 02:31

import badmintonscore.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_category', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='playername',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='teamnames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=100)),
                ('ranking', models.IntegerField()),
                ('photo', models.ImageField(upload_to=badmintonscore.models.teamnames.upload_logo)),
                ('player', models.ManyToManyField(to='badmintonscore.playername')),
            ],
        ),
        migrations.CreateModel(
            name='match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_number', models.CharField(default='', max_length=10, unique=True)),
                ('score_A', models.IntegerField(default=0)),
                ('score_B', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badmintonscore.category')),
                ('player_nameA', models.ManyToManyField(related_name='playernameA', to='badmintonscore.playername')),
                ('player_nameB', models.ManyToManyField(related_name='playernameb', to='badmintonscore.playername')),
                ('team_nameA', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_nameA', to='badmintonscore.teamnames')),
                ('team_nameB', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_nameB', to='badmintonscore.teamnames')),
            ],
        ),
    ]
